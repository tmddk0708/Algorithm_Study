public class App {
    public static void main(String[] args) throws Exception {
        // String str = "aabbaccc";
        // String str = "ababcdcdababcdcd";
        // String str = "abcabcdede";
        // String str = "abcabcabcabcdededededede";
        // String str = "xababcdcdababcdcd";
        // String str =
        // "ababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdabababcdcdab";
        // String str = "aaaaaaaaaaaabcd";
        String str = "xxxxxxxxxxyyyyy";
        System.out.println("s : " + solution(str) + "\n");
    }

    public static int solution(String s) {
        int answer = s.length();
        String subStr = s;

        for (int i = 1; i <= s.length() / 2; i++) {                       // 문자열 총길이의 절반까지만 검사
            int cnt = 1;
            String tmp1 = subStr.substring(0, i);                         // 비교기준이 될 문자열
            String tmp2 = new String();                                   // 비교될 문자열
            String answerStr = "";                                        // 완성된 문자열
            for (int j = 0; j <= s.length() - 1; j = j + i) {
                if (j + i <= s.length()) {                                // 다음차례의 반복문이 실행될지 확인 후
                    tmp2 = subStr.substring(j, j + i);                    // 실행되면 비교기준문자열 넣어주고
                } else {
                    tmp2 = subStr.substring(j, s.length());               // 실행이 안되면 남은 문자열 처리
                    if (cnt > 1) {
                        answerStr += Integer.toString(cnt) + tmp1 + tmp2; // 카운트가 남아있다면 카운트도 붙여준다
                    } else {
                        answerStr += tmp1 + tmp2;
                    }
                    break;
                }

                if (j != 0 && tmp1.equals(tmp2)) {                        // 비교했을 때 같은 문자열이면 카운트 증가 (최초실행은 예외)
                    cnt++;
                } else {
                    if (cnt > 1) {
                        answerStr += Integer.toString(cnt) + tmp1;        // 카운트가 2이상이면 문자열에 붙여주고 비교기준 문자열과 함께 초기화
                        cnt = 1;
                        tmp1 = subStr.substring(j, j + i);
                    } else if (j != 0) {
                        answerStr += tmp1;
                        tmp1 = subStr.substring(j, j + i);                // 카운트가 1이면 비교기준 문자열만 붙여주고 초기화
                    }
                }

                if (j + i >= s.length()) {                                // 다음차례의 반복문이 실행될지 확인 후 남은 문자열을 처리한다(위에도 같은 소스가 있어서 정리가 필요할 듯....)
                    if (cnt > 1) {
                        answerStr += Integer.toString(cnt) + tmp1;
                    } else {
                        answerStr += tmp1;
                    }
                }
                System.out.println(s + " i : " + i + ", j : " + j + ", substr : " + tmp1 + " " + tmp2 + " " + cnt + " " + answerStr);
            }
            if (answer > answerStr.length()) {                            // 최소값이 나오면 업데이트
                answer = answerStr.length();
            }
            System.out.println("answerStr : " + answerStr);
        }
        return answer;
    }
    // System.out.println("answer : " + answer);
}
